# u-root go runtime
#
# This is not a normal Heads module, since it builds all of its
# own dependencies.
#
u-root_url := https://github.com/u-root/u-root
u-root_output := $(build)/$(BOARD)/u-root.cpio
UROOT_CMDS ?= exp/tcz

export GOPATH=$(build)/u-root
UROOT_PATH=$(GOPATH)/src/github.com/u-root
UROOT_BUILT_PATH=$(GOPATH)/src/github.com/u-root/u-root

u-root_src_cmds := $(foreach cmd,$(UROOT_CMDS),github.com/u-root/u-root/cmds/$(cmd))

u-root_build := $(UROOT_BUILT_PATH)

$(UROOT_BUILT_PATH):
	mkdir -p $(GOPATH)/src/github.com/u-root/
	git clone https://github.com/u-root/u-root.git $(UROOT_PATH)
	cd $(UROOT_PATH) && go build

# If the board directory has its own go commands, copy them
# into the u-root tree so that they will be bundled into the go initrd
# TODO: generalize this to support more commands
# TODO: fix this sort that it doesn't leave commands lying around
#
ifeq "y" "$(shell [ -r 'boards/$(BOARD)/uinit.go' ] && echo y)"
u-root_uinit := $(GOPATH)/src/github.com/u-root/u-root/cmds/uinit/uinit.go
$(u-root_uinit): $(u-root_build) boards/$(BOARD)/uinit.go
	$(call install,boards/$(BOARD)/uinit.go,$@)
endif

#TODO: clean this up. no init no shell because initcmd and defaultsh are empty, just to build exp/tcz (TinyCore installer)
#For the moment, nothing installed from TinyCore runs. Guessing ldconfig requirement, LD paths are missing etc.
# Progress: after savagely injecting ld-linuxld-linux-x86-64.so.2 and libc.so.6, tcz bash works
#TODO: So much more libraries are missing from a normal host system to run tinycore.... Can't believe those are not packed by tinycore themselves.

$(u-root_output): $(u-root_build) $(u-root_uinit)
	$(UROOT_BUILT_PATH) \
	-uroot-source $(UROOT_PATH) \
	-initcmd="" \
	-build=gbb \
	-defaultsh="" \
	-files "/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2:lib/ld-linux-x86-64.so.2" \
	-files "/lib/x86_64-linux-gnu/libc.so.6:lib/libc.so.6" \
	-format=cpio \
	-o $@  \
	$(u-root_src_cmds)

# Override the initrd inputs and add in the kernel modules
initrd-$(CONFIG_UROOT) += $(u-root_output)

# Since we do not include u-root in modules-y, we have to define our
# own intermediate and clean targets here
$(build)/$(u-root_dir)/.build: $(u-root_output)
u-root.clean:
	$(RM) $(u-root_output)
