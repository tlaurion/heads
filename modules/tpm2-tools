# TPM2 tools program
modules-$(CONFIG_TPM2_TOOLS) += tpm2-tools

# CONFIG_TPM means any TPM version.  (CONFIG_TPM2_TOOLS differentiates them when
# they must be handled differently, which should be localized.)  Boards setting
# CONFIG_TPM2_TOOLS=y imply CONFIG_TPM=y.
ifeq "$(CONFIG_TPM2_TOOLS)" "y"
	export CONFIG_TPM=y
endif

tpm2-tools_version := 5.6
#tpm2-tools_version := 78a7681
#tpm2-tools_repo := https://github.com/tpm2-software/tpm2-tools.git

tpm2-tools_dir := tpm2-tools-$(tpm2-tools_version)
tpm2-tools_tar := tpm2-tools-$(tpm2-tools_version).tar.gz
tpm2-tools_url := https://github.com/tpm2-software/tpm2-tools/releases/download/$(tpm2-tools_version)/$(tpm2-tools_tar)
tpm2-tools_hash := 52c8bcbaadca082abfe5eb7ee4967d2d632d84b1677675f2f071b6d2ec22cec3


# TEST: from configure script 5.6 modified per sed below:
#hardcode_action=
#if test -n "$hardcode_libdir_flag_spec" ||
#   test -n "$runpath_var" ||
#   test yes = "$hardcode_automatic"; then
#
#  # We can hardcode non-existent directories.
#  if test no != "$hardcode_direct" &&
#     # If the only mechanism to avoid hardcoding is shlibpath_var, we
#     # have to relink, otherwise we might link with an installed library
#     # when we should be linking with a yet-to-be-installed one
#     ## test no != "$_LT_TAGVAR(hardcode_shlibpath_var, )" &&
#     test no != "$hardcode_minus_L"; then
#    # Linking always hardcodes the temporary library directory.
#    hardcode_action=relink
#  else
#    # We can link without hardcoding, and we can hardcode nonexisting dirs.
#    hardcode_action=immediate
#  fi
#else
#  # We cannot hardcode anything, or else we can only hardcode existing
#  # directories.
#  hardcode_action=unsupported


#  TEST: configure.log result as of now:
#  checking how to hardcode library paths into programs... immediate



# we have ESYS 3.0, but it doesn't figure that out on its own
tpm2-tools_configure := \
	./bootstrap \
	&& sed -i 's/hardcode_direct=yes/hardcode_direct=no/g' configure \
	&& sed -i 's/hardcode_libdir_flag_spec=.*/hardcode_libdir_flag_spec=/' configure \
	&& sed -i 's/hardcode_automatic=yes/hardcode_automatic=no/g' configure \
	&& sed -i 's/hardcode_runpath_var=yes/hardcode_runpath_var=no/g' configure \
	&& sed -i 's/hardcode_into_libs=yes/hardcode_into_libs=no/g' configure \
	&& sed -i 's/hardcode_direct_absolute=yes/hardcode_direct_absolute=no/g' configure \
	&& sed -i 's/inherit_rpath=yes/inherit_rpath=no/g' configure \
	&& sed -i 's/shlibpath_overrides_runpath=yes/shlibpath_overrides_runpath=no/g' configure \
	&& sed -i 's/lt_cv_shlibpath_overrides_runpath=yes/lt_cv_shlibpath_overrides_runpath=no/g' configure \
	&& ./configure \
	$(CROSS_TOOLS) \
	--host $(MUSL_ARCH)-elf-linux \
	--prefix "/" \
	--disable-fapi \
	--disable-static \
	TSS2_ESYS_3_0_CFLAGS="-I$(INSTALL)/include" \
	TSS2_ESYS_3_0_LIBS="-ltss2-esys" \

tpm2-tools_target := $(MAKE_JOBS) \
	DESTDIR="$(INSTALL)" \
	$(CROSS_TOOLS) \
	install \

tpm2-tools_output := tools/tpm2

tpm2-tools_depends := openssl tpm2-tss $(musl_dep)
